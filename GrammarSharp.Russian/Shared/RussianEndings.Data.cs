using System;
using JetBrains.Annotations;

namespace GrammarSharp.Russian
{
    internal static partial class RussianEndings
    {
        // All endings of nouns, adjectives and pronouns in one 55-char span
        // "оегоговыеейёмойёйамийаямиемуююахяяхыйыхымихомуимиевёвью"
        private static ReadOnlySpan<char> EndingSpan =>
        [
            'о', 'е', 'г', 'о', 'г', 'о', 'в', 'ы', 'е', 'е', 'й', 'ё', 'м', 'о', 'й', 'ё',
            'й', 'а', 'м', 'и', 'й', 'а', 'я', 'м', 'и', 'е', 'м', 'у', 'ю', 'ю', 'а', 'х',
            'я', 'я', 'х', 'ы', 'й', 'ы', 'х', 'ы', 'м', 'и', 'х', 'о', 'м', 'у', 'и', 'м',
            'и', 'е', 'в', 'ё', 'в', 'ь', 'ю',
        ];

        [Pure] public static ReadOnlySpan<char> Get(byte endingIndex)
            => EndingSpan.Slice(endingIndex & 0x3F, endingIndex >> 6);

        // A compact (576 B) noun ending index lookup, used by GetNounEndingIndices()
        private static ReadOnlySpan<byte> NounLookup =>
        [
            0x01, 0x01, 0x75, 0x75, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x4a, 0x4a, 0x4a, 0x4a, 0x75, 0x75,
            0x40, 0x40, 0x41, 0x4b, 0x40, 0x40, 0x41, 0x40, 0x41, 0x40, 0x41, 0x4b, 0x41, 0x4b, 0x40, 0x40,
            0x51, 0x51, 0x56, 0x56, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x56, 0x56, 0x56, 0x56, 0x75, 0x75,

            0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53,
            0x51, 0x51, 0x56, 0x56, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x56, 0x56, 0x56, 0x56, 0x51, 0x51,
            0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53,

            0x51, 0x51, 0x56, 0x56, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x56, 0x56, 0x56, 0x56, 0x53, 0x53,
            0x51, 0x51, 0x56, 0x56, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x56, 0x56, 0x56, 0x56, 0x51, 0x51,
            0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53,

            0x85, 0x85, 0x89, 0x89, 0x85, 0x85, 0x89, 0x89, 0xb1, 0x85, 0xb1, 0xb3, 0xb1, 0xb3, 0x89, 0x89,
            0x01, 0x01, 0x75, 0x89, 0x01, 0x01, 0x01, 0x89, 0x01, 0x01, 0x4a, 0x4a, 0x4a, 0x4a, 0x01, 0x01,
            0x01, 0x01, 0x75, 0x89, 0x01, 0x01, 0x01, 0x89, 0x01, 0x01, 0x4a, 0x4a, 0x4a, 0x4a, 0x89, 0x89,

            0x5b, 0x5b, 0x5c, 0x5c, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5c, 0x5c, 0x5c, 0x5c, 0x53, 0x53,
            0x5b, 0x5b, 0x5c, 0x5c, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5c, 0x5c, 0x5c, 0x5c, 0x5b, 0x5b,
            0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x53, 0x41, 0x53, 0x53,

            0x91, 0x91, 0x96, 0x96, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96,
            0x91, 0x91, 0x96, 0x96, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x96, 0x96, 0x96, 0x96, 0x91, 0x91,
            0x91, 0x91, 0x96, 0x96, 0x91, 0x91, 0x91, 0x91, 0x91, 0x91, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96,

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x5b, 0x5b, 0x5c, 0x5c, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5c, 0x5c, 0x5c, 0x5c, 0x75, 0x75,

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

            0xab, 0xab, 0x99, 0x8b, 0xab, 0xab, 0x99, 0xab, 0x99, 0xab, 0x99, 0x8b, 0x99, 0x8b, 0x99, 0x8b,
            0xab, 0xab, 0x99, 0x8b, 0xab, 0xab, 0x99, 0xab, 0x99, 0xab, 0x99, 0x8b, 0x99, 0x8b, 0xab, 0xab,
            0x8d, 0x8d, 0x89, 0x8f, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x8f, 0x89, 0x8f, 0xb5, 0xb5,

            0xd1, 0xd1, 0xd6, 0xd6, 0xd1, 0xd1, 0xd1, 0xd1, 0xd1, 0xd1, 0xd6, 0xd6, 0xd6, 0xd6, 0xd6, 0xd6,
            0xd1, 0xd1, 0xd6, 0xd6, 0xd1, 0xd1, 0xd1, 0xd1, 0xd1, 0xd1, 0xd6, 0xd6, 0xd6, 0xd6, 0xd1, 0xd1,
            0xd1, 0xd1, 0xd6, 0xd6, 0xd1, 0xd1, 0xd1, 0xd1, 0xd1, 0xd1, 0xd6, 0xd6, 0xd6, 0xd6, 0xd6, 0xd6,

            0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x53, 0x41, 0x53, 0x53,
            0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x53, 0x41, 0x53, 0x53,
            0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x53, 0x41, 0x53, 0x53,

            0x9e, 0x9e, 0xa1, 0xa1, 0x9e, 0x9e, 0x9e, 0x9e, 0x9e, 0x9e, 0xa1, 0xa1, 0xa1, 0xa1, 0xa1, 0xa1,
            0x9e, 0x9e, 0xa1, 0xa1, 0x9e, 0x9e, 0x9e, 0x9e, 0x9e, 0x9e, 0xa1, 0xa1, 0xa1, 0xa1, 0x9e, 0x9e,
            0x9e, 0x9e, 0xa1, 0xa1, 0x9e, 0x9e, 0x9e, 0x9e, 0x9e, 0x9e, 0xa1, 0xa1, 0xa1, 0xa1, 0xa1, 0xa1,
        ];

        // A compact (392 B) adjective ending index lookup, used by GetAdjectiveEndingIndices()
        public static ReadOnlySpan<byte> AdjectiveLookup =>
        [
            0xa3, 0x8d, 0x93, 0x93, 0x93, 0x8d, 0x93, 0x8d, 0xa3, 0x8d, 0x93, 0x93, 0x93, 0x93,
            0x80, 0x80, 0x88, 0x88, 0x80, 0x80, 0x88, 0x80, 0x88, 0x80, 0x88, 0x88, 0x88, 0x88,
            0x95, 0x95, 0xa0, 0xa0, 0x95, 0x95, 0x95, 0x95, 0x95, 0x95, 0xa0, 0xa0, 0xa0, 0xa0,
            0x87, 0x87, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x87, 0x87, 0x98, 0x98, 0x98, 0x98,

            0xc3, 0xc3, 0xc1, 0xc1, 0xc3, 0xc3, 0xc1, 0xc3, 0xc1, 0xc3, 0xc1, 0xc1, 0xc1, 0xc1,
            0xc3, 0xc3, 0xc1, 0xc1, 0xc3, 0xc3, 0xc1, 0xc3, 0xc1, 0xc3, 0xc1, 0xc1, 0xc1, 0xc1,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9,

            0xeb, 0xeb, 0xd9, 0xd9, 0xeb, 0xeb, 0xd9, 0xeb, 0xd9, 0xeb, 0xd9, 0xd9, 0xd9, 0xd9,
            0xeb, 0xeb, 0xd9, 0xd9, 0xeb, 0xeb, 0xd9, 0xeb, 0xd9, 0xeb, 0xd9, 0xd9, 0xd9, 0xd9,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae, 0xae, 0xae, 0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae,

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x9b, 0x9b, 0x9c, 0x9c, 0x9b, 0x9b, 0x9b, 0x9b, 0x9b, 0x9b, 0x9c, 0x9c, 0x9c, 0x9c,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

            0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae, 0xae, 0xae, 0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae,
            0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae, 0xae, 0xae, 0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xe7, 0xe7, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xe7, 0xe7, 0xee, 0xee, 0xee, 0xee,

            0xab, 0xab, 0x99, 0x99, 0xab, 0xab, 0x99, 0xab, 0x99, 0xab, 0x99, 0x99, 0x99, 0x99,
            0xab, 0xab, 0x99, 0x99, 0xab, 0xab, 0x99, 0xab, 0x99, 0xab, 0x99, 0x99, 0x99, 0x99,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9,

            0x01, 0x01, 0x75, 0x75, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x4a, 0x4a, 0x4a, 0x4a,
            0x40, 0x40, 0x41, 0x4b, 0x40, 0x40, 0x41, 0x40, 0x41, 0x40, 0x41, 0x4b, 0x41, 0x4b,
            0x51, 0x51, 0x56, 0x56, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x56, 0x56, 0x56, 0x56,
            0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x47, 0x47, 0x53, 0x53, 0x53, 0x53,
        ];

        // A compact (336 B) pronoun ending index lookup, used by GetPronounEndingIndices()
        // TODO: consider shortening pronoun ending lookup, since only 1, 2, 4 and 6 stem types are used
        public static ReadOnlySpan<byte> PronounLookup =>
        [
            0x01, 0x01, 0x75, 0x75, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x4a, 0x4a, 0x4a, 0x4a,
            0x40, 0x40, 0x41, 0x4b, 0x40, 0x40, 0x41, 0x40, 0x41, 0x40, 0x41, 0x4b, 0x41, 0x4b,
            0x51, 0x51, 0x56, 0x56, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x56, 0x56, 0x56, 0x56,
            0x47, 0x47, 0x53, 0x53, 0x53, 0x53, 0x53, 0x53, 0x47, 0x47, 0x53, 0x53, 0x53, 0x53,

            0x51, 0x51, 0x56, 0x56, 0xc3, 0xc3, 0xc1, 0xc3, 0xc1, 0xc3, 0xc1, 0xc1, 0xc1, 0xc1,
            0x51, 0x51, 0x56, 0x56, 0xc3, 0xc3, 0xc1, 0xc3, 0xc1, 0xc3, 0xc1, 0xc1, 0xc1, 0xc1,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9,

            0x5b, 0x5b, 0x5c, 0x5c, 0xeb, 0xeb, 0xd9, 0xeb, 0xd9, 0xeb, 0xd9, 0xd9, 0xd9, 0xd9,
            0x5b, 0x5b, 0x5c, 0x5c, 0xeb, 0xeb, 0xd9, 0xeb, 0xd9, 0xeb, 0xd9, 0xd9, 0xd9, 0xd9,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae, 0xae, 0xae, 0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae,

            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x5b, 0x5b, 0x5c, 0x5c, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5c, 0x5c, 0x5c, 0x5c,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

            0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae, 0xae, 0xae, 0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae,
            0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae, 0xae, 0xae, 0xa7, 0xa7, 0xae, 0xae, 0xae, 0xae,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xe7, 0xe7, 0xee, 0xee, 0xee, 0xee, 0xee, 0xee, 0xe7, 0xe7, 0xee, 0xee, 0xee, 0xee,

            0xab, 0xab, 0x99, 0x8b, 0xab, 0xab, 0x99, 0xab, 0x99, 0xab, 0x99, 0x8b, 0x99, 0x8b,
            0xab, 0xab, 0x99, 0x8b, 0xab, 0xab, 0x99, 0xab, 0x99, 0xab, 0x99, 0x8b, 0x99, 0x8b,
            0x8d, 0x8d, 0x89, 0x89, 0x8d, 0x8d, 0x89, 0x8d, 0x89, 0x8d, 0x89, 0x89, 0x89, 0x89,
            0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa5, 0xa5, 0xa9, 0xa9, 0xa9, 0xa9,
        ];

    }
}
